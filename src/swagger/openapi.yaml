openapi: '3.0.0'
info:
  title: todo_app_api
  description: This simple todo app is written in Ruby on Rails
  version: 1.0.0
tags:
  - name: Register
  - name: Login
  - name: Users
  - name: Todos
paths:
  /register:
    post:
      tags:
        - Register
      summary: ユーザー情報登録
      requestBody:
        description: 名前、メールアドレス、パスワードを入力
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '200':
          description: 成功したら登録したメールアドレスにメールを飛ばす
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '400':
          description: パスワード、確認用パスワードが違った時エラー
        '404':
          description: ユーザー登録時エラー
  /register_completion:
    get:
      tags:
        - Register
      summary: ユーザー登録完了
      parameters:
        - name: token
          in: query
          description: メールアドレスに添付されたトークン
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ユーザー登録を完了する。register_statusをcomleteにする
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '400':
          description: "入力されたパスワードが不正のときエラー"
        '404':
          description: トークン不正エラー
  /login:
    post:
      tags:
        - Login
      summary: ユーザーログイン
      requestBody:
        description: メールアドレスとパスワード一致で認証
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: メールアドレス未認証、ログイン失敗時エラー
        '404':
          description: リクエストされたメールアドレスが存在しないエラー
  /users/{user_id}/todos:
    # TODO: add bearer auth
    get:
      tags:
        - Todos
      summary: Todo一覧
      parameters:
        - name: user_id
          in: path
          description: ユーザーID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ログイン中のユーザーのTodoを全て返す
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/Todo'
    post:
      tags:
        - Todos
      summary: Todo新規作成
      parameters:
        - name: user_id
          in: path
          description: User's id
          required: true
          schema:
            type: integer
      requestBody:
        description: Information to create a new todo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '200':
          description: Todo新規作成成功レスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Todo'
        '404':
          description: Todo新規作成エラー
  /users/{user_id}/todos/{id}:
    get:
      tags:
        - Todos
      summary: Todo詳細
      parameters:
        - name: user_id
          in: path
          description: ユーザーID
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: TodoのID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ログイン中のユーザーのTodoを1件返す
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Todo'
    put:
      tags:
        - Todos
      summary: Todoの情報を変更
      parameters:
        - name: user_id
          in: path
          description: ユーザーID
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: TodoのID
          required: true
          schema:
            type: integer
      requestBody:
        description: Todoの情報を更新する。空が送られたらその値は更新しない
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '200':
          description: 成功レスポンス。Todoの情報を更新する
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Todo'
        '404':
          description: Todo更新エラー
    delete:
      tags:
        - Todos
      summary: Todoを削除
      parameters:
        - name: user_id
          in: path
          description: ユーザーID
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: TodoのID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 指定のTodoを削除する
  /users/{user_id}:
    put:
      tags:
        - Users
      summary: ユーザー名変更
      parameters:
        - name: user_id
          in: path
          description: ユーザーID
          required: true
          schema:
            type: integer
      requestBody:
        description: 変更したいユーザー名
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: ユーザー名変更成功
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '404':
          description: 名前更新エラー
  /users/{user_id}/password_update:
    put:
      tags:
        - Users
      summary: パスワード更新（現在のパスワードを覚えている場合）
      parameters:
        - name: user_id
          in: path
          description: ユーザーID
          required: true
          schema:
            type: integer
      requestBody:
        description: 現在のパスワード、新しいパスワード、確認用新しいパスワードをリクエスト
        content:
          application/json:
            schema:
              type: object
              required:
                - current_password
                - password
                - password_confirm
              properties:
                current_password:
                  type: string
                password:
                  type: string
                password_confirm:
                  type: string
      responses:
        '200':
          description: パスワード更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '400':
          description: パスワードが有効でなかった時エラー
        '404':
          description: パスワード更新エラー
  /users/{user_id}/password/forgot:
    post:
      tags:
        - Users
      summary: パスワード更新（現在のパスワードを忘れた場合）
      parameters:
        - name: user_id
          in: path
          description: ユーザーID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 登録しているメールアドレスにパスワード変更用URLを添付したメールを送信
        '404':
          description: メールアドレスが登録されていなかったときエラー
  /users/{user_id}/password/reset:
    post:
      tags:
        - Users
      summary: パスワード更新完了（現在のパスワードを忘れた場合）
      parameters:
        - name: user_id
          in: path
          description: ユーザーID
          required: true
          schema:
            type: integer
        - name: token
          in: query
          description: メールアドレスに添付されたトークンをリクエスト
          required: true
          schema:
            type: string
      requestBody:
        description: 新しいパスワードをリクエスト
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
      responses:
        '200':
          description: パスワード変更完了
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '404':
          description: トークンが不正の時エラー、パスワード更新エラー
  /password/reset:
    post:
      tags:
        - Login
      summary: パスワード更新（ログイン前）
      responses:
        '200':
          description: 入力されたメールアドレスにパスワード変更用URLを添付したメールを送信
        '404':
          description: 入力されたメールアドレスが登録されていなかったときエラー

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterUser:
      type: object
      required:
        - email
        - name
        - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        password_confirm:
          type: string
    LoginUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    Todo:
      type: object
      required:
        - title
        - content
        - status
        - target_completion_date
      properties:
        title:
          type: string
        content:
          type: string
        status:
          type: string
        target_completion_date:
          type: string
  responses:
    Todo:
      type: object
      description: Response of create todos.
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        status:
          type: string
        target_completion_date:
          type: string
        user_id:
          type: integer
          format: int64
        created_at:
          type: string
        update_at:
          type: string
    User:
      type: object
      description: ユーザーの情報
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        register_status:
          type: string
